\y. ( let fact:= \x. ( if x = y then y else x * fact( x + 1 ) ) in fact( 1 ) )( 8 )
\y. ( let fact:= \x. ( if x = y then y else x * fact( x + 1 ) ) in fact( 1 ) )( 8 )
\y. ( let fact:= \x. ( if x = y then y else x * fact( x + 1 ) ) in fact( 1 ) )
8
let fact:= \x. ( if x = y then y else x * fact( x + 1 ) ) in fact( 1 )
\fact. ( fact( 1 ) )
\x. ( if x = y then y else x * fact( x + 1 ) )
fact( 1 )
fact
= \x. ( if x = y then y else x * fact( x + 1 ) )
1
if x = y then y else x * fact( x + 1 )
x = y
x
= 1
y
= 8
x * fact( x + 1 )
x
= 1
fact( x + 1 )
fact
= \x. ( if x = y then y else x * fact( x + 1 ) )
x + 1
x
= 1
1
if x = y then y else x * fact( x + 1 )
x = y
x
= 2
y
= 8
x * fact( x + 1 )
x
= 2
fact( x + 1 )
fact
= \x. ( if x = y then y else x * fact( x + 1 ) )
x + 1
x
= 2
1
if x = y then y else x * fact( x + 1 )
x = y
x
= 3
y
= 8
x * fact( x + 1 )
x
= 3
fact( x + 1 )
fact
= \x. ( if x = y then y else x * fact( x + 1 ) )
x + 1
x
= 3
1
if x = y then y else x * fact( x + 1 )
x = y
x
= 4
y
= 8
x * fact( x + 1 )
x
= 4
fact( x + 1 )
fact
= \x. ( if x = y then y else x * fact( x + 1 ) )
x + 1
x
= 4
1
if x = y then y else x * fact( x + 1 )
x = y
x
= 5
y
= 8
x * fact( x + 1 )
x
= 5
fact( x + 1 )
fact
= \x. ( if x = y then y else x * fact( x + 1 ) )
x + 1
x
= 5
1
if x = y then y else x * fact( x + 1 )
x = y
x
= 6
y
= 8
x * fact( x + 1 )
x
= 6
fact( x + 1 )
fact
= \x. ( if x = y then y else x * fact( x + 1 ) )
x + 1
x
= 6
1
if x = y then y else x * fact( x + 1 )
x = y
x
= 7
y
= 8
x * fact( x + 1 )
x
= 7
fact( x + 1 )
fact
= \x. ( if x = y then y else x * fact( x + 1 ) )
x + 1
x
= 7
1
if x = y then y else x * fact( x + 1 )
x = y
x
= 8
y
= 8
y
= 8
SECD :-> 40320
Unbound_Val_For_variale fact
Not Possible
let fact:= \x. ( if x = 1 then 1 else x * fact( x - 1 ) ) in fact( 5 )
let fact:= \x. ( if x = 1 then 1 else x * fact( x - 1 ) ) in fact( 5 )
\fact. ( fact( 5 ) )
\x. ( if x = 1 then 1 else x * fact( x - 1 ) )
fact( 5 )
fact
= \x. ( if x = 1 then 1 else x * fact( x - 1 ) )
5
if x = 1 then 1 else x * fact( x - 1 )
x = 1
x
= 5
1
x * fact( x - 1 )
x
= 5
fact( x - 1 )
fact
= \x. ( if x = 1 then 1 else x * fact( x - 1 ) )
x - 1
x
= 5
1
if x = 1 then 1 else x * fact( x - 1 )
x = 1
x
= 4
1
x * fact( x - 1 )
x
= 4
fact( x - 1 )
fact
= \x. ( if x = 1 then 1 else x * fact( x - 1 ) )
x - 1
x
= 4
1
if x = 1 then 1 else x * fact( x - 1 )
x = 1
x
= 3
1
x * fact( x - 1 )
x
= 3
fact( x - 1 )
fact
= \x. ( if x = 1 then 1 else x * fact( x - 1 ) )
x - 1
x
= 3
1
if x = 1 then 1 else x * fact( x - 1 )
x = 1
x
= 2
1
x * fact( x - 1 )
x
= 2
fact( x - 1 )
fact
= \x. ( if x = 1 then 1 else x * fact( x - 1 ) )
x - 1
x
= 2
1
if x = 1 then 1 else x * fact( x - 1 )
x = 1
x
= 1
1
1
SECD :-> 120
Unbound_Val_For_variale fact
Not Possible
let fib:= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) ) in fib( 5 )
let fib:= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) ) in fib( 5 )
\fib. ( fib( 5 ) )
\x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
fib( 5 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
5
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 5
1
if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 0
x
= 5
0
fib( x - 2 ) + fib( x - 1 )
fib( x - 2 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 2
x
= 5
2
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 3
1
if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 0
x
= 3
0
fib( x - 2 ) + fib( x - 1 )
fib( x - 2 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 2
x
= 3
2
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 1
1
1
fib( x - 1 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 1
x
= 3
1
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 2
1
if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 0
x
= 2
0
fib( x - 2 ) + fib( x - 1 )
fib( x - 2 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 2
x
= 2
2
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 0
1
if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 0
x
= 0
0
1
fib( x - 1 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 1
x
= 2
1
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 1
1
1
fib( x - 1 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 1
x
= 5
1
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 4
1
if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 0
x
= 4
0
fib( x - 2 ) + fib( x - 1 )
fib( x - 2 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 2
x
= 4
2
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 2
1
if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 0
x
= 2
0
fib( x - 2 ) + fib( x - 1 )
fib( x - 2 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 2
x
= 2
2
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 0
1
if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 0
x
= 0
0
1
fib( x - 1 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 1
x
= 2
1
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 1
1
1
fib( x - 1 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 1
x
= 4
1
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 3
1
if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 0
x
= 3
0
fib( x - 2 ) + fib( x - 1 )
fib( x - 2 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 2
x
= 3
2
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 1
1
1
fib( x - 1 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 1
x
= 3
1
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 2
1
if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 0
x
= 2
0
fib( x - 2 ) + fib( x - 1 )
fib( x - 2 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 2
x
= 2
2
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 0
1
if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 0
x
= 0
0
1
fib( x - 1 )
fib
= \x. ( if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 ) )
x - 1
x
= 2
1
if x = 1 then 1 else if x = 0 then 1 else fib( x - 2 ) + fib( x - 1 )
x = 1
x
= 1
1
1
SECD :-> 8
Unbound_Val_For_variale fib
Not Possible
